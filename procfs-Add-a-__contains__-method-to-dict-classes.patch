From 0f2e3966ccb296e350e7895fc95beb20d6d5be7e Mon Sep 17 00:00:00 2001
From: Guy Streeter <streeter@redhat.com>
Date: Thu, 28 May 2015 12:22:45 -0500
Subject: [PATCH 1/7] procfs: Add a __contains__ method to dict classes

Signed-off-by: Guy Streeter <streeter@redhat.com>
Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
Signed-off-by: John Kacur <jkacur@redhat.com>
---
 procfs/procfs.py | 15 +++++++++++++++
 1 file changed, 15 insertions(+)

diff --git a/procfs/procfs.py b/procfs/procfs.py
index ecd7b202f223..0dbf7f5b7da5 100755
--- a/procfs/procfs.py
+++ b/procfs/procfs.py
@@ -84,6 +84,9 @@ class pidstat:
 	def has_key(self, fieldname):
 		return self.fields.has_key(fieldname)
 
+	def __contains__(self, fieldname):
+		return fieldname in self.fields
+
 	def load(self, basedir = "/proc"):
 		f = open("%s/%d/stat" % (basedir, self.pid))
 		fields = f.readline().strip().split()
@@ -131,6 +134,9 @@ class pidstatus:
 	def has_key(self, fieldname):
 		return self.fields.has_key(fieldname)
 
+	def __contains__(self, fieldname):
+		return fieldname in self.fields
+
 	def load(self, basedir = "/proc"):
 		f = open("%s/%d/status" % (basedir, self.pid))
 		self.fields = {}
@@ -175,6 +181,9 @@ class process:
 	def has_key(self, attr):
 		return hasattr(self, attr)
 
+	def __contains__(self, attr):
+		return hasattr(self, attr)
+
 	def load_cmdline(self):
 		f = file("/proc/%d/cmdline" % self.pid)
 		self.cmdline = f.readline().strip().split('\0')[:-1]
@@ -227,6 +236,9 @@ class pidstats:
 	def has_key(self, key):
 		return self.processes.has_key(key)
 
+	def __contains__(self, key):
+		return key in self.processes
+
 	def reload(self):
 		del self.processes
 		self.processes = {}
@@ -350,6 +362,9 @@ class interrupts:
 	def has_key(self, key):
 		return self.interrupts.has_key(str(key))
 
+	def __contains__(self, key):
+		return str(key) in self.interrupts
+
 	def reload(self):
 		del self.interrupts
 		self.interrupts = {}
-- 
1.8.3.1

